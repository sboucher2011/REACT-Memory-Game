{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","console","log","useEffect","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAGe,SAASA,EAAT,GAA+D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,SAShE,OACE,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBAAKF,UAAU,OAAOC,IAAI,iBAAiBE,QAX/B,WACbJ,GACHF,EAAaD,IASwDM,IAAI,mBCZ/E,IAAME,EAAa,CACjB,CAAE,IAAO,qBAAsBC,SAAS,GACxC,CAAE,IAAO,qBAAsBA,SAAS,GACxC,CAAE,IAAO,mBAAoBA,SAAS,GACtC,CAAE,IAAO,qBAAsBA,SAAS,GACxC,CAAE,IAAO,qBAAsBA,SAAS,GACxC,CAAE,IAAO,oBAAqBA,SAAS,IAoF1BC,MAjFf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAGMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAA1B,GAAI,kCAAUA,GAAV,IAAgB2B,GAAIH,KAAKC,cAEpCZ,EAASS,GACTP,EAAS,IAILd,EAAe,SAACD,GACpB4B,QAAQC,IAAI7B,GACZgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAIhD8B,qBAAU,WACJd,GAAaE,IACfE,GAAY,GACRJ,EAAUX,MAAQa,EAAUb,KAC9BQ,GAAS,SAAAkB,GACP,OAAOA,EAAUL,KAAI,SAAA1B,GACnB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAKL,GAAZ,IAAkBS,SAAS,IAEpBT,QAIbgC,KAEAC,YAAW,kBAAMD,MAAa,QAIjC,CAAChB,EAAWE,IAEfU,QAAQC,IAAIjB,GAGZkB,qBAAU,WACRT,MACC,IAGH,IAAMW,EAAY,WAChBf,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAmB,GAAS,OAAIA,EAAY,KAClCd,GAAY,IAGd,OACE,sBAAKhB,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASc,EAAjB,sBAEA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAA1B,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK2B,SAQd,wCAAWb,SCpFnBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cbd19e5e.chunk.js","sourcesContent":["import React from 'react'\nimport './SingleCard.css'\n\nexport default function SingleCard( {card, handleChoice, flipped, disabled}) {\n\n  const handleClick = () => {\n    if (!disabled) {\n      handleChoice(card)\n    }\n  }\n\n\n  return (\n    <div className=\"card\">\n        <div className={flipped ? \"flipped\" : \"\"}>\n          <img className=\"front\" src={card.src} alt=\"card front\"/>\n          <img className=\"back\" src=\"/img/cover.png\" onClick={handleClick} alt=\"card back\"/>\n        </div>\n  </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport './App.css'\nimport SingleCard from './components/SingleCard'\n\nconst cardImages = [\n  { \"src\": \"./img/helmet-1.png\", matched: false },\n  { \"src\": \"./img/potion-1.png\", matched: false },\n  { \"src\": \"./img/ring-1.png\", matched: false },\n  { \"src\": \"./img/scroll-1.png\", matched: false },\n  { \"src\": \"./img/shield-1.png\", matched: false },\n  { \"src\": \"./img/sword-1.png\", matched: false },\n]\n\nfunction App() {\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n\n  // shuffle cards for new game\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map(card => ({ ...card, id: Math.random() }))\n      \n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n  // handle a choice\n  const handleChoice = (card) => {\n    console.log(card)\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  // compare 2 selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true)\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true }\n            } else {\n              return card\n            }\n          })\n        })\n        resetTurn()\n      } else {\n        setTimeout(() => resetTurn(), 1000)\n      }\n\n    }\n  }, [choiceOne, choiceTwo])\n\n  console.log(cards)\n\n  //start game automatically\n  useEffect(() => {\n    shuffleCards()\n  }, [])\n\n  // reset choices & increase turn\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns + 1)\n    setDisabled(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map(card => (\n          <SingleCard \n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n        <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}